{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\ovning-memory-game-Nina-FEU20\\\\memory-game\\\\src\\\\components\\\\GameBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport MemoryCard from \"./MemoryCard\";\n\nfunction GameBoard(props) {\n  _s();\n\n  const [numbers, setNumbers] = useState([]);\n  const [firstCard, setFirstCard] = useState(0);\n  const [secondCard, setSecondCard] = useState(0);\n  const [isClicked, setIsClicked] = useState([]);\n  const [lockGame, setLockGame] = useState(false);\n  useEffect(() => {\n    const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8];\n    setNumbers(shuffle(numbers));\n  }, []);\n  useEffect(() => {\n    compareCards();\n  }, [secondCard]);\n\n  function shuffle(array) {\n    return array.sort(() => Math.random() - 0.5);\n  }\n\n  function updateScore() {\n    props.setPoints(props.points + 1);\n  }\n\n  function compareCards() {\n    if (firstCard === secondCard && firstCard !== 0) {\n      setTimeout(function () {\n        updateScore();\n        reset();\n      }, 1000);\n    } else if (firstCard !== 0) {\n      setTimeout(function () {\n        reset();\n        setIsClicked(isClicked.splice(0, isClicked.length - 2));\n      }, 1000);\n    }\n  }\n\n  function reset() {\n    setFirstCard(0);\n    setSecondCard(0);\n    setLockGame(!lockGame);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: points === 8 ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"You Won!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"game-plan\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"par: \", points]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: numbers.map((number, index) => {\n          return /*#__PURE__*/_jsxDEV(MemoryCard, {\n            className: isClicked.includes(index) ? \"memory-card flip\" : \"memory-card\",\n            index: index,\n            number: number,\n            firstCard: firstCard,\n            secondCard: secondCard,\n            setFirstCard: setFirstCard,\n            setSecondCard: setSecondCard,\n            setIsClicked: setIsClicked,\n            isClicked: isClicked,\n            lockGame: lockGame,\n            setLockGame: setLockGame\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GameBoard, \"fa/gCkg7kFSJ91RqGDtCX0MTG3Q=\");\n\n_c = GameBoard;\nexport default GameBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/ovning-memory-game-Nina-FEU20/memory-game/src/components/GameBoard.js"],"names":["React","useEffect","useState","MemoryCard","GameBoard","props","numbers","setNumbers","firstCard","setFirstCard","secondCard","setSecondCard","isClicked","setIsClicked","lockGame","setLockGame","shuffle","compareCards","array","sort","Math","random","updateScore","setPoints","points","setTimeout","reset","splice","length","map","number","index","includes"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACxB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,OAAO,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,CAAhB;AACAC,IAAAA,UAAU,CAACS,OAAO,CAACV,OAAD,CAAR,CAAV;AACD,GAHQ,EAGN,EAHM,CAAT;AAKAL,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,YAAY;AACb,GAFQ,EAEN,CAACP,UAAD,CAFM,CAAT;;AAIA,WAASM,OAAT,CAAiBE,KAAjB,EAAwB;AACtB,WAAOA,KAAK,CAACC,IAAN,CAAW,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAAjC,CAAP;AACD;;AAED,WAASC,WAAT,GAAuB;AACrBjB,IAAAA,KAAK,CAACkB,SAAN,CAAgBlB,KAAK,CAACmB,MAAN,GAAe,CAA/B;AACD;;AAED,WAASP,YAAT,GAAwB;AACtB,QAAIT,SAAS,KAAKE,UAAd,IAA4BF,SAAS,KAAK,CAA9C,EAAiD;AAC/CiB,MAAAA,UAAU,CAAC,YAAY;AACrBH,QAAAA,WAAW;AACXI,QAAAA,KAAK;AACN,OAHS,EAGP,IAHO,CAAV;AAID,KALD,MAKO,IAAIlB,SAAS,KAAK,CAAlB,EAAqB;AAC1BiB,MAAAA,UAAU,CAAC,YAAY;AACrBC,QAAAA,KAAK;AACLb,QAAAA,YAAY,CAACD,SAAS,CAACe,MAAV,CAAiB,CAAjB,EAAoBf,SAAS,CAACgB,MAAV,GAAmB,CAAvC,CAAD,CAAZ;AACD,OAHS,EAGP,IAHO,CAAV;AAID;AACF;;AAED,WAASF,KAAT,GAAiB;AACfjB,IAAAA,YAAY,CAAC,CAAD,CAAZ;AACAE,IAAAA,aAAa,CAAC,CAAD,CAAb;AACAI,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD;;AAED,sBACE;AAAA,cACGU,MAAM,KAAK,CAAX,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA,8BACE;AAAA,+BACE;AAAA,8BAASA,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBACGlB,OAAO,CAACuB,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC9B,8BACE,QAAC,UAAD;AACE,YAAA,SAAS,EACPnB,SAAS,CAACoB,QAAV,CAAmBD,KAAnB,IACI,kBADJ,GAEI,aAJR;AAME,YAAA,KAAK,EAAEA,KANT;AAOE,YAAA,MAAM,EAAED,MAPV;AASE,YAAA,SAAS,EAAEtB,SATb;AAUE,YAAA,UAAU,EAAEE,UAVd;AAWE,YAAA,YAAY,EAAED,YAXhB;AAYE,YAAA,aAAa,EAAEE,aAZjB;AAaE,YAAA,YAAY,EAAEE,YAbhB;AAcE,YAAA,SAAS,EAAED,SAdb;AAeE,YAAA,QAAQ,EAAEE,QAfZ;AAgBE,YAAA,WAAW,EAAEC;AAhBf,aAQOgB,KARP;AAAA;AAAA;AAAA;AAAA,kBADF;AAoBD,SArBA;AADH;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GAjFQ3B,S;;KAAAA,S;AAmFT,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport MemoryCard from \"./MemoryCard\";\r\n\r\nfunction GameBoard(props) {\r\n  const [numbers, setNumbers] = useState([]);\r\n  const [firstCard, setFirstCard] = useState(0);\r\n  const [secondCard, setSecondCard] = useState(0);\r\n  const [isClicked, setIsClicked] = useState([]);\r\n  const [lockGame, setLockGame] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8];\r\n    setNumbers(shuffle(numbers));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    compareCards();\r\n  }, [secondCard]);\r\n\r\n  function shuffle(array) {\r\n    return array.sort(() => Math.random() - 0.5);\r\n  }\r\n\r\n  function updateScore() {\r\n    props.setPoints(props.points + 1);\r\n  }\r\n\r\n  function compareCards() {\r\n    if (firstCard === secondCard && firstCard !== 0) {\r\n      setTimeout(function () {\r\n        updateScore();\r\n        reset();\r\n      }, 1000);\r\n    } else if (firstCard !== 0) {\r\n      setTimeout(function () {\r\n        reset();\r\n        setIsClicked(isClicked.splice(0, isClicked.length - 2));\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  function reset() {\r\n    setFirstCard(0);\r\n    setSecondCard(0);\r\n    setLockGame(!lockGame);\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      {points === 8 ? (\r\n        <h2>You Won!</h2>\r\n      ) : (\r\n        <section className=\"game-plan\">\r\n          <div>\r\n            <p>par: {points}</p>\r\n          </div>\r\n          <div className=\"game-board\">\r\n            {numbers.map((number, index) => {\r\n              return (\r\n                <MemoryCard\r\n                  className={\r\n                    isClicked.includes(index)\r\n                      ? \"memory-card flip\"\r\n                      : \"memory-card\"\r\n                  }\r\n                  index={index}\r\n                  number={number}\r\n                  key={index}\r\n                  firstCard={firstCard}\r\n                  secondCard={secondCard}\r\n                  setFirstCard={setFirstCard}\r\n                  setSecondCard={setSecondCard}\r\n                  setIsClicked={setIsClicked}\r\n                  isClicked={isClicked}\r\n                  lockGame={lockGame}\r\n                  setLockGame={setLockGame}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </section>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default GameBoard;\r\n"]},"metadata":{},"sourceType":"module"}