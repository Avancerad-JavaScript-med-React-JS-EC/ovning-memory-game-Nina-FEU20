{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\ovning-memory-game-Nina-FEU20\\\\memory-game\\\\src\\\\components\\\\GameBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport MemoryCard from \"./MemoryCard\";\n\nfunction GameBoard() {\n  _s();\n\n  const [pairs, setPairs] = useState(0);\n  const [numbers, setNumbers] = useState([]);\n  const [firstCard, setFirstCard] = useState(0);\n  const [secondCard, setSecondCard] = useState(0); //   const [isFlipped, setIsFlipped] = useState(false);\n\n  useEffect(() => {\n    const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8];\n    setNumbers(shuffle(numbers));\n  }, []);\n  useEffect(() => {\n    compareCards();\n  }, [secondCard]);\n\n  function shuffle(array) {\n    return array.sort(() => Math.random() - 0.5);\n  }\n\n  function updateScore(point) {\n    setPairs(point);\n    console.log(\"par \" + pairs);\n  }\n\n  function compareCards() {\n    if (firstCard === secondCard && firstCard !== 0) {\n      console.log(\"lika\");\n      updateScore(1);\n      setFirstCard(0);\n      setSecondCard(0);\n    } else {\n      setFirstCard(0);\n      setSecondCard(0);\n    }\n  }\n\n  function printEvent(e) {\n    console.log(e.target.offsetParent.className);\n    e.target.offsetParent.className = \"memory-card\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      onClick: printEvent,\n      children: numbers.map((number, index) => {\n        return /*#__PURE__*/_jsxDEV(MemoryCard, {\n          number: number,\n          firstCard: firstCard,\n          secondCard: secondCard,\n          setFirstCard: setFirstCard,\n          setSecondCard: setSecondCard //   isFlipped={isFlipped}\n          //   setIsFlipped={setIsFlipped}\n\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"par: \", pairs]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GameBoard, \"XmkTlwCEvrO2/72aA1LT5Eg5okk=\");\n\n_c = GameBoard;\nexport default GameBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/ovning-memory-game-Nina-FEU20/memory-game/src/components/GameBoard.js"],"names":["React","useEffect","useState","MemoryCard","GameBoard","pairs","setPairs","numbers","setNumbers","firstCard","setFirstCard","secondCard","setSecondCard","shuffle","compareCards","array","sort","Math","random","updateScore","point","console","log","printEvent","e","target","offsetParent","className","map","number","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport MemoryCard from \"./MemoryCard\";\r\n\r\nfunction GameBoard() {\r\n  const [pairs, setPairs] = useState(0);\r\n  const [numbers, setNumbers] = useState([]);\r\n  const [firstCard, setFirstCard] = useState(0);\r\n  const [secondCard, setSecondCard] = useState(0);\r\n\r\n  //   const [isFlipped, setIsFlipped] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8];\r\n    setNumbers(shuffle(numbers));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    compareCards();\r\n  }, [secondCard]);\r\n\r\n  function shuffle(array) {\r\n    return array.sort(() => Math.random() - 0.5);\r\n  }\r\n\r\n  function updateScore(point) {\r\n    setPairs(point);\r\n    console.log(\"par \" + pairs);\r\n  }\r\n\r\n  function compareCards() {\r\n    if (firstCard === secondCard && firstCard !== 0) {\r\n      console.log(\"lika\");\r\n      updateScore(1);\r\n      setFirstCard(0);\r\n      setSecondCard(0);\r\n    } else {\r\n      setFirstCard(0);\r\n      setSecondCard(0);\r\n    }\r\n  }\r\n\r\n  function printEvent(e) {\r\n    console.log(e.target.offsetParent.className);\r\n    e.target.offsetParent.className = \"memory-card\";\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"game-board\" onClick={printEvent}>\r\n        {numbers.map((number, index) => {\r\n          return (\r\n            <MemoryCard\r\n              number={number}\r\n              key={index}\r\n              firstCard={firstCard}\r\n              secondCard={secondCard}\r\n              setFirstCard={setFirstCard}\r\n              setSecondCard={setSecondCard}\r\n              //   isFlipped={isFlipped}\r\n              //   setIsFlipped={setIsFlipped}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <div>\r\n        <p>par: {pairs}</p>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default GameBoard;\r\n"]},"metadata":{},"sourceType":"module"}